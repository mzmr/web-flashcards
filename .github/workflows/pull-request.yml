name: Pull Request Workflow

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 5

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5
          
      - name: Upload E2E test coverage
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-coverage
          path: coverage/
          retention-days: 5

  status-comment:
    name: Add Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, e2e-tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: unit-coverage
        continue-on-error: true

      - name: Download E2E test coverage
        uses: actions/download-artifact@v4
        with:
          name: e2e-test-coverage
          path: e2e-coverage
        continue-on-error: true

      - name: Create status comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let unitCoverageExists = false;
            let e2eCoverageExists = false;
            
            try {
              unitCoverageExists = fs.existsSync('./unit-coverage/index.html');
              e2eCoverageExists = fs.existsSync('./e2e-coverage/index.html');
            } catch (error) {
              console.log('Error checking coverage files:', error);
            }

            const lintStatus = "${{ needs.lint.result }}" === "success" ? "‚úÖ Przeszed≈Ç" : "‚ùå Nie powi√≥d≈Ç siƒô";
            const unitTestsStatus = "${{ needs.unit-tests.result }}" === "success" ? "‚úÖ Przesz≈Çy" : "‚ùå Nie powiod≈Çy siƒô";
            const e2eTestsStatus = "${{ needs.e2e-tests.result }}" === "success" ? "‚úÖ Przesz≈Çy" : "‚ùå Nie powiod≈Çy siƒô";
            
            const allSucceeded = "${{ needs.lint.result }}" === "success" && 
                                "${{ needs.unit-tests.result }}" === "success" && 
                                "${{ needs.e2e-tests.result }}" === "success";
            
            const statusHeader = allSucceeded 
              ? "### ‚úÖ Wszystkie testy przesz≈Çy pomy≈õlnie!" 
              : "### ‚ö†Ô∏è Niekt√≥re testy nie powiod≈Çy siƒô";
            
            const statusMessage = `
            ${statusHeader}
            
            **Szczeg√≥≈Çy:**
            - ${lintStatus}: Lint
            - ${unitTestsStatus}: Testy jednostkowe
            - ${e2eTestsStatus}: Testy E2E
            
            ${unitCoverageExists ? 'üìä Dostƒôpny raport pokrycia test√≥w jednostkowych' : ''}
            ${e2eCoverageExists ? 'üìä Dostƒôpny raport pokrycia test√≥w E2E' : ''}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: statusMessage
            }); 